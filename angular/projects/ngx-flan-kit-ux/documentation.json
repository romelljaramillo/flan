{
    "pipes": [],
    "interfaces": [
        {
            "name": "Item",
            "id": "interface-Item-381d8ebc25278bd76a623efc2d8b71e0b4e3c8c4cea5d6ce57a1a481c14512b277fbc461712ca438162fe9238e8e7f4f48ab5ad762ac75a0b4a8fade125164b4",
            "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\n\nexport interface Item {\n  title?: string | undefined;\n  content: string;\n}\n\n@Component({\n  selector: 'rjb-accordion',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './accordion.component.html',\n  styleUrl: './accordion.component.css',\n})\nexport class AccordionComponent implements OnInit {\n  \n  /**\n   * items to display in the accordion\n   */\n  @Input() items: Item[] = [];\n\n  /**\n   * @description id for the accordion\n   */\n  @Input() id: string = 'rjaccordion';\n\n  /**\n   * Active item index expanded by default undefined value (starts at 0 to n-items)\n   */\n  @Input() showItem: number | null = null;\n\n  /**\n   * Show all items expanded by default false value\n   */\n  @Input() showAll: boolean = false;\n\n  ngOnInit(): void {\n    if (this.showAll) {\n      this.showItem = null;\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "NgxFlanKitUxService",
            "id": "injectable-NgxFlanKitUxService-d6efd4a5c6715bea1220f66a58a8cc7de0a56aabf95c9d546fca0fab311c6117fd7e36da779ef4ee85970140828e34c76a0cfb02e4c05647b41d52dce0832f42",
            "file": "projects/ngx-flan-kit-ux/src/lib/ngx-flan-kit-ux.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFlanKitUxService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AccordionComponent",
            "id": "component-AccordionComponent-381d8ebc25278bd76a623efc2d8b71e0b4e3c8c4cea5d6ce57a1a481c14512b277fbc461712ca438162fe9238e8e7f4f48ab5ad762ac75a0b4a8fade125164b4",
            "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rjb-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "'rjaccordion'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 510,
                            "end": 547,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 511,
                                "end": 522,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "description"
                            },
                            "comment": "<p>id for the accordion</p>\n"
                        }
                    ],
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nitems to display in the accordion\n",
                    "description": "<p>items to display in the accordion</p>\n",
                    "line": 21,
                    "type": "Item[]",
                    "decorators": []
                },
                {
                    "name": "showAll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow all items expanded by default false value\n",
                    "description": "<p>Show all items expanded by default false value</p>\n",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showItem",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nActive item index expanded by default undefined value (starts at 0 to n-items)\n",
                    "description": "<p>Active item index expanded by default undefined value (starts at 0 to n-items)</p>\n",
                    "line": 31,
                    "type": "number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\n\nexport interface Item {\n  title?: string | undefined;\n  content: string;\n}\n\n@Component({\n  selector: 'rjb-accordion',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './accordion.component.html',\n  styleUrl: './accordion.component.css',\n})\nexport class AccordionComponent implements OnInit {\n  \n  /**\n   * items to display in the accordion\n   */\n  @Input() items: Item[] = [];\n\n  /**\n   * @description id for the accordion\n   */\n  @Input() id: string = 'rjaccordion';\n\n  /**\n   * Active item index expanded by default undefined value (starts at 0 to n-items)\n   */\n  @Input() showItem: number | null = null;\n\n  /**\n   * Show all items expanded by default false value\n   */\n  @Input() showAll: boolean = false;\n\n  ngOnInit(): void {\n    if (this.showAll) {\n      this.showItem = null;\n    }\n  }\n}\n",
            "styleUrl": "./accordion.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"accordion\" [id]=\"id\">\n    @for (item of items; track $index) {\n    <div class=\"accordion-item\">\n        <h2 class=\"accordion-header\" id=\"item-{{$index}}\">\n            <button class=\"accordion-button\" [ngClass]=\"{'collapsed': !showAll && showItem !== $index }\" type=\"button\"\n                data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#collapse-' + $index\" aria-expanded=\"true\"\n                [attr.aria-controls]=\"'collapse-' + $index\">\n                {{item.title}}\n            </button>\n        </h2>\n        <div id=\"collapse-{{$index}}\" class=\"accordion-collapse collapse\"\n            [ngClass]=\"{'show': showAll || showItem === $index}\" aria-labelledby=\"headingOne\"\n            [attr.data-bs-parent]=\"'#item-' + $index\">\n            <div class=\"accordion-body\">\n                {{item.content}}\n            </div>\n        </div>\n    </div>\n    }\n</div>"
        },
        {
            "name": "BtnComponent",
            "id": "component-BtnComponent-63b6df6706082241b5b8b71c7dc89e647035764f1e3065d4fa185b5620adc01e3ec785082ebbd1cf0a6a8593211f3cb7b5346caeb846d7b0cbbd381e04f6865d",
            "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rjb-btn",
            "styleUrls": [
                "./btn.component.css"
            ],
            "styles": [],
            "template": "@if(block) {\n<div class=\"d-grid gap-2\">\n  <ng-container *ngTemplateOutlet=\"buttonTemplate\"></ng-container>\n</div>\n} @else {\n<ng-container *ngTemplateOutlet=\"buttonTemplate\"></ng-container>\n}\n<ng-template #buttonTemplate>\n  <button [attr.id]=\"id || null\" [attr.type]=\"type || null\"\n    [ngClass]=\"classes\"\n    (click)=\"onClick.emit($event)\"\n    [disabled]=\"disabled\"\n    [ngStyle]=\"attributesKeys\"\n  >\n    @if(icon) {\n      <i [ngClass]=\"onIcon\"></i>\n    }\n    {{ label }}\n    <ng-content></ng-content>\n  </button>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "block",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nthe icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\n",
                    "description": "<p>the icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]</p>\n",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "outline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "decorators": []
                },
                {
                    "name": "attributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a custom attribute to the element example: 'data-custom=\"example\"'\n",
                    "description": "<p>Applies a custom attribute to the element example: &#39;data-custom=&quot;example&quot;&#39;</p>\n",
                    "line": 31,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\nWe’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n{color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\nthrough Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\nit easier to customize across multiple colors modes like light and dark. These new variables are globally\nset on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.\n",
                    "description": "<p>Bootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\nWe’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n{color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\nthrough Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\nit easier to customize across multiple colors modes like light and dark. These new variables are globally\nset on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.</p>\n",
                    "line": 41,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"light\" | \"dark\" | \"link\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a custom class to the element example: 'fw-bold'\n",
                    "description": "<p>Applies a custom class to the element example: &#39;fw-bold&#39;</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nthe icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\nexample: 'fa fa-[plus]'\n",
                    "description": "<p>the icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\nexample: &#39;fa fa-[plus]&#39;</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies an identifier to the element\n",
                    "description": "<p>Applies an identifier to the element</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "textColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a text color to the element\n",
                    "description": "<p>Applies a text color to the element</p>\n",
                    "line": 55,
                    "type": "\"text-primary\" | \"text-secondary\" | \"text-success\" | \"text-info\" | \"text-warning\" | \"text-danger\" | \"text-light\" | \"text-dark\" | \"text-link\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CoreComponent } from '../core/core.component';\n\n@Component({\n  selector: 'rjb-btn',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    @if(block) {\n    <div class=\"d-grid gap-2\">\n      <ng-container *ngTemplateOutlet=\"buttonTemplate\"></ng-container>\n    </div>\n    } @else {\n    <ng-container *ngTemplateOutlet=\"buttonTemplate\"></ng-container>\n    }\n    <ng-template #buttonTemplate>\n      <button [attr.id]=\"id || null\" [attr.type]=\"type || null\"\n        [ngClass]=\"classes\"\n        (click)=\"onClick.emit($event)\"\n        [disabled]=\"disabled\"\n        [ngStyle]=\"attributesKeys\"\n      >\n        @if(icon) {\n          <i [ngClass]=\"onIcon\"></i>\n        }\n        {{ label }}\n        <ng-content></ng-content>\n      </button>\n    </ng-template>\n  `,\n  styleUrls: ['./btn.component.css'],\n})\nexport class BtnComponent extends CoreComponent {\n  @Input() outline = false;\n  @Input() size!: 'sm' | 'md' | 'lg';\n  @Input() type!: 'button' | 'submit' | 'reset';\n  @Input() label!: string;\n  /**\n   * the icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\n   */\n  // @Input() icon = '';\n  @Input() disabled = false;\n  @Input() block = false;\n  @Output() onClick = new EventEmitter<Event>();\n\n  get classes(): string[] {\n    let btnType = '';\n\n    if (this.color) {\n      btnType = this.outline\n        ? `btn btn-outline-${this.color}`\n        : `btn btn-${this.color}`;\n    }\n\n    const sizeClass = (this.size) ? `btn-${this.size}` : '';\n    \n    return [btnType, sizeClass, this.textColor, this.css, this.disabled ? 'disabled' : ''].filter(\n      Boolean\n    );\n  }\n\n  // get onIcon(): string {\n  //   return `fa fa-${this.icon}`;\n  // }\n\n  get attributesKeys() {\n    const attrs: { [key: string]: any } = {}; // Explicitly define the type of attrs\n    if (this.attributes) {\n      for (const key of Object.keys(this.attributes)) {\n        attrs[key] = this.attributes[key];\n      }\n    }\n    // Aquí puedes agregar más lógica si es necesario\n    return attrs;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: block;\n}\n",
                    "styleUrl": "./btn.component.css"
                }
            ],
            "stylesData": "",
            "extends": [
                "CoreComponent"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 47
                    }
                },
                "attributesKeys": {
                    "name": "attributesKeys",
                    "getSignature": {
                        "name": "attributesKeys",
                        "type": "",
                        "returnType": "",
                        "line": 67
                    }
                }
            }
        },
        {
            "name": "BtnThemeModeComponent",
            "id": "component-BtnThemeModeComponent-172d43dac6208db4a9cdc583242bb121316a3b1c5755a19bc084822cfd201804163faa165b1950137269d235c50f39fdd1499351de24d97920e9164d289d2455",
            "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rjb-btn-theme-mode",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./btn-theme-mode.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 1127,
                            "end": 1140,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 1128,
                                "end": 1136,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "attributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a custom attribute to the element example: 'data-custom=\"example\"'\n",
                    "description": "<p>Applies a custom attribute to the element example: &#39;data-custom=&quot;example&quot;&#39;</p>\n",
                    "line": 31,
                    "type": "literal type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\nWe’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n{color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\nthrough Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\nit easier to customize across multiple colors modes like light and dark. These new variables are globally\nset on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.\n",
                    "description": "<p>Bootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\nWe’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n{color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\nthrough Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\nit easier to customize across multiple colors modes like light and dark. These new variables are globally\nset on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.</p>\n",
                    "line": 41,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"light\" | \"dark\" | \"link\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a custom class to the element example: 'fw-bold'\n",
                    "description": "<p>Applies a custom class to the element example: &#39;fw-bold&#39;</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nthe icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\nexample: 'fa fa-[plus]'\n",
                    "description": "<p>the icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\nexample: &#39;fa fa-[plus]&#39;</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies an identifier to the element\n",
                    "description": "<p>Applies an identifier to the element</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                },
                {
                    "name": "textColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a text color to the element\n",
                    "description": "<p>Applies a text color to the element</p>\n",
                    "line": 55,
                    "type": "\"text-primary\" | \"text-secondary\" | \"text-success\" | \"text-info\" | \"text-warning\" | \"text-danger\" | \"text-light\" | \"text-dark\" | \"text-link\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "CoreComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "faMoon",
                    "defaultValue": "faMoon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "faSun",
                    "defaultValue": "faSun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "themeClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateBodyClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { CoreComponent } from '../core/core.component';\n// import { faMoon, faSun } from '@fortawesome/free-regular-svg-icons';\n\n\n@Component({\n  selector: 'rjb-btn-theme-mode',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './btn-theme-mode.component.html',\n  styleUrl: './btn-theme-mode.component.css',\n})\nexport class BtnThemeModeComponent extends CoreComponent{\n  faMoon = faMoon;\n  faSun = faSun;\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  // /**\n  //  * What background color to use\n  //  */\n  // @Input()\n  // color: 'primary' |  'secondary' |  'success' |  'info' |  'warning' |  'danger' |  'light' |  'dark' = 'light';\n  \n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  isDarkMode = false;\n  themeClasses: string | undefined;\n\n  public get classes(): string[] {\n    const mode = this.primary\n      ? 'storybook-button--primary'\n      : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n\n  constructor() {\n    super();\n    this.color = 'light';\n    const storedDarkMode = localStorage.getItem('color-theme');\n    console.log('storedDarkMode', storedDarkMode);\n    if (storedDarkMode !== null) {\n      this.isDarkMode = storedDarkMode ? JSON.parse(storedDarkMode) : false;\n    } else {\n      const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      console.log('prefersDarkMode', prefersDarkMode);\n      this.isDarkMode = prefersDarkMode;\n    }\n\n    this.updateBodyClass();\n  }\n\n  ngOnInit(): void {\n    this.updateBodyClass();\n  }\n\n  updateBodyClass() {\n    document.documentElement.setAttribute('data-bs-theme', this.isDarkMode ? 'dark' : 'light');\n\n    if (this.color === 'dark' || this.color === 'light') {\n      this.color = this.isDarkMode ? 'dark' : 'light';\n    }\n  }\n\n  toggleDarkMode() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('color-theme', JSON.stringify(this.isDarkMode));\n    this.updateBodyClass();\n  }\n}\n",
            "styleUrl": "./btn-theme-mode.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 60
            },
            "extends": [
                "CoreComponent"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 54
                    }
                }
            },
            "templateData": "<button id=\"theme-toggle\" data-tooltip-target=\"tooltip-toggle\" type=\"button\" class=\"btn btn-{{color}}\"\n  (click)=\"toggleDarkMode()\">\n  @if(isDarkMode){\n  <fa-icon [icon]=\"faMoon\"></fa-icon>\n  } @else {\n  <fa-icon [icon]=\"faSun\"></fa-icon>\n  }\n  {{label}}\n</button>"
        },
        {
            "name": "CoreComponent",
            "id": "component-CoreComponent-2cc0d92bbe2c5fc28bb73e7c0d17d1c05ca2c4f33b60dce722aa506eec0f554004372b9f33675240ac366edf3f8a4e8c795cbe2194ba65991bd1c79cd2b74d53",
            "file": "projects/ngx-flan-kit-ux/src/lib/core/core.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rjb-core",
            "styleUrls": [],
            "styles": [],
            "template": "<p    [attr.id]=\"id || null\"\n    [ngClass]=\"[css, textColor, 'btn btn-' + color]\"\n  >\n    core works!\n  </p>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "attributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a custom attribute to the element example: 'data-custom=\"example\"'\n",
                    "description": "<p>Applies a custom attribute to the element example: &#39;data-custom=&quot;example&quot;&#39;</p>\n",
                    "line": 31,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\nWe’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n{color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\nthrough Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\nit easier to customize across multiple colors modes like light and dark. These new variables are globally\nset on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.\n",
                    "description": "<p>Bootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\nWe’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n{color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\nthrough Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\nit easier to customize across multiple colors modes like light and dark. These new variables are globally\nset on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.</p>\n",
                    "line": 41,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"light\" | \"dark\" | \"link\"",
                    "decorators": []
                },
                {
                    "name": "css",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a custom class to the element example: 'fw-bold'\n",
                    "description": "<p>Applies a custom class to the element example: &#39;fw-bold&#39;</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nthe icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\nexample: 'fa fa-[plus]'\n",
                    "description": "<p>the icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\nexample: &#39;fa fa-[plus]&#39;</p>\n",
                    "line": 70,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies an identifier to the element\n",
                    "description": "<p>Applies an identifier to the element</p>\n",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nApplies a text color to the element\n",
                    "description": "<p>Applies a text color to the element</p>\n",
                    "line": 55,
                    "type": "\"text-primary\" | \"text-secondary\" | \"text-success\" | \"text-info\" | \"text-warning\" | \"text-danger\" | \"text-light\" | \"text-dark\" | \"text-link\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'rjb-core',\n  standalone: true,\n  imports: [CommonModule],\n  template: `<p\n    [attr.id]=\"id || null\"\n    [ngClass]=\"[css, textColor, 'btn btn-' + color]\"\n  >\n    core works!\n  </p>`,\n  styleUrl: './core.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CoreComponent {\n  /**\n   * Applies an identifier to the element\n   */\n  @Input() id!: string;\n\n  /**\n   * Applies a custom class to the element example: 'fw-bold'\n   */\n  @Input() css!: string;\n\n  /**\n   * Applies a custom attribute to the element example: 'data-custom=\"example\"'\n   */\n  @Input() attributes?: { [key: string]: any };\n\n  /**\n   * Bootstrap’s color palette has continued to expand and become more nuanced in v5.3.0.\n   * We’ve added new variables for secondary and tertiary text and background colors, plus {color}-bg-subtle,\n   * {color}-border-subtle, and {color}-text-emphasis for our theme colors. These new colors are available\n   * through Sass and CSS variables (but not our color maps or utility classes) with the express goal of making\n   * it easier to customize across multiple colors modes like light and dark. These new variables are globally\n   * set on :root and are adapted for our new dark color mode while our original theme colors remain unchanged.\n   */\n  @Input() color!:\n    | 'primary'\n    | 'secondary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'light'\n    | 'dark'\n    | 'link';\n\n  /**\n   * Applies a text color to the element\n   */\n  @Input() textColor!:\n    | 'text-primary'\n    | 'text-secondary'\n    | 'text-success'\n    | 'text-info'\n    | 'text-warning'\n    | 'text-danger'\n    | 'text-light'\n    | 'text-dark'\n    | 'text-link';\n\n  /**\n   * the icon is from the fontawesome lib and the format should be only the name part of the icon for example: fa fa-[icon-name]\n   * example: 'fa fa-[plus]'\n  */\n  @Input() icon = '';\n\n\n /*  get attributesKeys(): string[] {\n    return this.objectKeys(this.attributes);\n  }\n\n  objectKeys(obj?: { [key: string]: any }): string[] {\n    return obj ? Object.keys(obj) : [];\n  } */\n\n  /* get attributesKeys() {\n    const attrs: { [key: string]: any } = {}; // Explicitly define the type of attrs\n    if (this.attributes) {\n      for (const key of Object.keys(this.attributes)) {\n        attrs[key] = this.attributes[key];\n      }\n    }\n    // Aquí puedes agregar más lógica si es necesario\n    return attrs;\n  } */\n\n  get onIcon(): string {\n    return `fa fa-${this.icon}`;\n  }\n\n}\n",
            "styleUrl": "./core.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "onIcon": {
                    "name": "onIcon",
                    "getSignature": {
                        "name": "onIcon",
                        "type": "string",
                        "returnType": "string",
                        "line": 92
                    }
                }
            }
        },
        {
            "name": "NgxFlanKitUxComponent",
            "id": "component-NgxFlanKitUxComponent-926381a7ecd7a8d1aa582e9f1ce0d9f06d8fc447c0d8aa749e24f0a7c1657dd4913db12cd6234b807469193ccc4e550561ecda3f75d56a4997da3d25e7052edc",
            "file": "projects/ngx-flan-kit-ux/src/lib/ngx-flan-kit-ux.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-ngx-flan-kit-ux",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<p>\n  ngx-flan-kit-ux works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-flan-kit-ux',\n  standalone: true,\n  imports: [],\n  template: `\n    <p>\n      ngx-flan-kit-ux works!\n    </p>\n  `,\n  styles: ``\n})\nexport class NgxFlanKitUxComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Block",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    block: true,\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Css",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    css: 'text-primary',\n  },\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'dark',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ]\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Id",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ],\n    id: 'accordion-id'\n  },\n}"
            },
            {
                "name": "Id",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    id: 'id-text',\n  },\n}"
            },
            {
                "name": "Info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'info',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AccordionComponent>",
                "defaultValue": "{\n  title: 'Roanja/Accordion',\n  component: AccordionComponent,\n  tags: ['autodocs'],\n  render: (args: AccordionComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  argTypes: {\n    items: {\n      control: 'array',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CoreComponent>",
                "defaultValue": "{\n  title: 'Roanja/Core',\n  component: CoreComponent,\n  decorators: [componentWrapperDecorator((story) => `<div class=\"text-center m-3\">${story}</div>`)],\n  tags: ['autodocs'],\n  parameters: {\n    componentSubtitle:\n      'Add CSS classes to the component and an ID',\n  },\n  /*\n   * More on Storybook argTypes at:\n   * https://storybook.js.org/docs/react/api/argtypes\n   */\n  render: (args: CoreComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  \n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BtnThemeModeComponent>",
                "defaultValue": "{\n  title: 'Roanja/ThemeMode',\n  component: BtnThemeModeComponent,\n  tags: ['autodocs'],\n  render: (args: BtnThemeModeComponent) => ({\n    props: {\n      ...args,\n    },\n  })  \n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BtnComponent>",
                "defaultValue": "{\n  title: 'Roanja/Btn',\n  component: BtnComponent,\n  tags: ['autodocs'],\n  parameters: {\n    componentSubtitle:\n      `Buttons are used to initialize an action, either in the background or foreground of an experience. \n      They are used primarily for actions, such as \"Add\", \"Close\", \"Cancel\", \"Save\", etc.`,\n  },\n  render: (args: BtnComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  \n}"
            },
            {
                "name": "Outline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    outline: true,\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  globalTypes: {\n    theme: {\n      description: 'Global theme for components',\n      defaultValue: 'light',\n      toolbar: {\n        title: 'Theme',\n        icon: 'circlehollow',\n        items: [\n          { value: 'light', title: 'Light', left: '☀️', right: 'Light' },\n          { value: 'dark', title: 'Dark', left: '🌙', right: 'Dark' },\n        ],\n        dynamicTitle: true,\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      theme: themes.light      \n    },\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [\n    (storyFunc, context) => {\n      const theme = context.globals[\"theme\"];\n      console.log('theme', theme);\n      \n      document.documentElement.setAttribute('data-bs-theme', theme === 'dark' ? 'dark' : 'light')\n      return storyFunc();\n    },\n  ],\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'secondary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "ShowAll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ],\n    showAll: true\n  },\n}"
            },
            {
                "name": "ShowItem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ],\n    showItem: 1\n  },\n}"
            },
            {
                "name": "SizeLg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'lg',\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "SizeSm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'sm',\n    color: 'primary',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'success',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    color: 'warning',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Color",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"light\" | \"dark\" | \"link\"",
                "file": "projects/ngx-flan-kit-ux/src/interfaces/types.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AccordionComponent>",
                "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CoreComponent>",
                "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BtnThemeModeComponent>",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BtnComponent>",
                "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts": [
                {
                    "name": "Block",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    block: true,\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BtnComponent>",
                    "defaultValue": "{\n  title: 'Roanja/Btn',\n  component: BtnComponent,\n  tags: ['autodocs'],\n  parameters: {\n    componentSubtitle:\n      `Buttons are used to initialize an action, either in the background or foreground of an experience. \n      They are used primarily for actions, such as \"Add\", \"Close\", \"Cancel\", \"Save\", etc.`,\n  },\n  render: (args: BtnComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  \n}"
                },
                {
                    "name": "Outline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    outline: true,\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "SizeLg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'lg',\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "SizeSm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'sm',\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts": [
                {
                    "name": "Css",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    css: 'text-primary',\n  },\n}"
                },
                {
                    "name": "Id",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    id: 'id-text',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CoreComponent>",
                    "defaultValue": "{\n  title: 'Roanja/Core',\n  component: CoreComponent,\n  decorators: [componentWrapperDecorator((story) => `<div class=\"text-center m-3\">${story}</div>`)],\n  tags: ['autodocs'],\n  parameters: {\n    componentSubtitle:\n      'Add CSS classes to the component and an ID',\n  },\n  /*\n   * More on Storybook argTypes at:\n   * https://storybook.js.org/docs/react/api/argtypes\n   */\n  render: (args: CoreComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  \n}"
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'dark',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'info',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BtnThemeModeComponent>",
                    "defaultValue": "{\n  title: 'Roanja/ThemeMode',\n  component: BtnThemeModeComponent,\n  tags: ['autodocs'],\n  render: (args: BtnThemeModeComponent) => ({\n    props: {\n      ...args,\n    },\n  })  \n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'primary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'secondary',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'success',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    color: 'warning',\n    label: 'Button',\n  },\n}"
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ]\n  },\n}"
                },
                {
                    "name": "Id",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ],\n    id: 'accordion-id'\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AccordionComponent>",
                    "defaultValue": "{\n  title: 'Roanja/Accordion',\n  component: AccordionComponent,\n  tags: ['autodocs'],\n  render: (args: AccordionComponent) => ({\n    props: {\n      ...args,\n    },\n  }),\n  argTypes: {\n    items: {\n      control: 'array',\n    },\n  },\n}"
                },
                {
                    "name": "ShowAll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ],\n    showAll: true\n  },\n}"
                },
                {
                    "name": "ShowItem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    items: [\n      { title: 'Item 1', content: 'Contenido 1' },\n      { title: 'Item 2', content: 'Contenido 2' },\n      { title: 'Item 3', content: 'Contenido 3' }\n    ],\n    showItem: 1\n  },\n}"
                }
            ],
            "projects/ngx-flan-kit-ux/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-flan-kit-ux/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  globalTypes: {\n    theme: {\n      description: 'Global theme for components',\n      defaultValue: 'light',\n      toolbar: {\n        title: 'Theme',\n        icon: 'circlehollow',\n        items: [\n          { value: 'light', title: 'Light', left: '☀️', right: 'Light' },\n          { value: 'dark', title: 'Dark', left: '🌙', right: 'Dark' },\n        ],\n        dynamicTitle: true,\n      },\n    },\n  },\n  parameters: {\n    docs: {\n      theme: themes.light      \n    },\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n  decorators: [\n    (storyFunc, context) => {\n      const theme = context.globals[\"theme\"];\n      console.log('theme', theme);\n      \n      document.documentElement.setAttribute('data-bs-theme', theme === 'dark' ? 'dark' : 'light')\n      return storyFunc();\n    },\n  ],\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ngx-flan-kit-ux/src/interfaces/types.interface.ts": [
                {
                    "name": "Color",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\" | \"light\" | \"dark\" | \"link\"",
                    "file": "projects/ngx-flan-kit-ux/src/interfaces/types.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AccordionComponent>",
                    "file": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CoreComponent>",
                    "file": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BtnThemeModeComponent>",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BtnComponent>",
                    "file": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-flan-kit-ux/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionComponent",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Id",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShowAll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShowItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BtnThemeModeComponent",
                "coveragePercent": 52,
                "coverageCount": "10/19",
                "status": "good"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn-theme-mode/btn-theme-mode.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BtnComponent",
                "coveragePercent": 50,
                "coverageCount": "7/14",
                "status": "medium"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Block",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Color",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeLg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/btn/btn.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SizeSm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/core/core.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CoreComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Css",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Id",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/core/core.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/ngx-flan-kit-ux.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxFlanKitUxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-flan-kit-ux/src/lib/ngx-flan-kit-ux.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NgxFlanKitUxService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}